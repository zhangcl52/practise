package com.hunter.study.thread.sychronized;import lombok.extern.slf4j.Slf4j;import org.openjdk.jol.info.ClassLayout;/** * @Author 水木 * @Date 2021/3/12  9:13 上午 */@Slf4j(topic = "c.MarkWordTest10111")public class MarkWordTest10111 {	private static final Object lock1 = new Object();	public static void main(String[] args) throws InterruptedException {//		try {//			Thread.sleep(5000);//		} catch (InterruptedException e) {//			e.printStackTrace();//		}		Object lock = new Object();		log.debug("=============主线程进锁前=============");		final Thread t1 = new Thread(() -> {			synchronized (lock) {				log.debug("=============线程t1进锁后=============");				try {					log.debug("-----子1-----"+ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1//					lock.wait();//					System.out.println("hash code "+lock.hashCode());					log.debug("-----子2-----"+ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1					log.debug("=============线程t1 唤醒  后=============");				} catch (Exception e) {					e.printStackTrace();				}			}		});		log.debug("-----主1-----"+ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1		t1.start();		try {			Thread.sleep(4000);		} catch (InterruptedException e) {			e.printStackTrace();		}		log.debug("-----主2-----"+ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1//		lock.notify();		log.debug("=============主线程 唤醒1 =============");		synchronized (lock) {			lock.notify();		}		log.debug("=============主线程 唤醒2 =============");	}}