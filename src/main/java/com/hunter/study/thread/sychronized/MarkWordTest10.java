package com.hunter.study.thread.sychronized;import lombok.extern.slf4j.Slf4j;import org.openjdk.jol.info.ClassLayout;import java.util.concurrent.TimeUnit;/** * @Author 水木 * @Date 2021/3/12  9:13 上午 */@Slf4j(topic = "c.MarkWordTest")public class MarkWordTest10 {	private static final Object lock = new Object();	private static final Object lock1 = new Object();	public static void main(String[] args) throws InterruptedException {		log.debug("=============主线程进锁前=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable()); //---101 可偏向		final Thread t1 = new Thread(() -> {			synchronized (lock) {				log.debug("=============线程t1进锁后=============");				log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1				try {					lock.wait();				} catch (InterruptedException e) {					e.printStackTrace();				}//				try {//					Thread.sleep(TimeUnit.SECONDS.toMillis(5));//				} catch (InterruptedException e) {//					e.printStackTrace();//				}			}		});		t1.start();		try {			Thread.sleep(TimeUnit.SECONDS.toMillis(2));		} catch (InterruptedException e) {			e.printStackTrace();		}		final Thread t2 = new Thread(() -> {			synchronized (lock) {				log.debug("=============线程t2进锁后=============");				log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1			}		});		t2.start();		t1.join();		t2.join();		log.debug("=============线程t2出锁后=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1	}}