package com.hunter.study.thread.sychronized;import lombok.extern.slf4j.Slf4j;import org.openjdk.jol.info.ClassLayout;/** * @Author 水木 * @Date 2021/3/12  9:13 上午 */@Slf4j(topic = "c.MarkWordTest")public class MarkWordTest {	/**	 * 验证普通对象的对象头	 */	private static final Object lock = new Object();	public static void main(String[] args) throws InterruptedException {		testBiasedLock();	}	public static void testBiasedLock() throws InterruptedException {		log.debug("=============进入锁前=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable()); //---001  无锁		final Thread t1 = new Thread(() -> {			synchronized (lock) {				//进入锁后				log.debug("=============第一次进入锁后=============");				log.debug(ClassLayout.parseInstance(lock).toPrintable());//---000 轻量级锁//				testBiasedLock1();			}		});		t1.start();		t1.join();		//出锁后		log.debug("=============出锁后=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable());//---001  无锁	}	public static void testBiasedLock1() {		synchronized (lock) {			//进入锁后			log.debug("=============第二次进入锁后=============");			log.debug(ClassLayout.parseInstance(lock).toPrintable());//---000 轻量级锁		}	}}