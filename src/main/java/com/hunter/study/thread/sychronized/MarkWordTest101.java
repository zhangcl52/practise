package com.hunter.study.thread.sychronized;import lombok.extern.slf4j.Slf4j;import org.openjdk.jol.info.ClassLayout;/** * @Author 水木 * @Date 2021/3/12  9:13 上午 */@Slf4j(topic = "c.MarkWordTest")public class MarkWordTest101 {	private static final Object lock = new Object();	public static void main(String[] args) throws InterruptedException {		log.debug("=============主线程进锁前=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable()); //---101 可偏向		final Thread t1 = new Thread(() -> {			synchronized (lock) {				log.debug("=============线程t1进锁后=============");				log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1				testBiasedLock();			}		});		t1.start();		t1.join();		log.debug("=============线程t1出锁后=============");		log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1	}	public static void testBiasedLock() {		synchronized (lock) {			log.debug("=============第二次进入锁后=============");			log.debug(ClassLayout.parseInstance(lock).toPrintable());//---101  可偏向, threadId 是线程1		}	}}