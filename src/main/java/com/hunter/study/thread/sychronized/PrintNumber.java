package com.hunter.study.thread.sychronized;/** * @Author 水木 * @Date 2021/3/1  9:28 上午 */public class PrintNumber {	private static final Object Lock = new Object();	private static int number;	private static int maxNumber = 100;	public static void main(String[] args) {		boolean b1=true;		boolean b2=true;		if(b1){			System.out.println("b1");		}else if(b2){			System.out.println("b2");		}//		printNumber();	}	/**	 * 两个线程交替打印奇偶数	 */	public static void printNumber() {		new Thread(() -> {			synchronized (Lock) {				while (number <= maxNumber) {					if (number % 2 == 0) {						System.out.println("偶数Thread:" + number++);						Lock.notify();					} else {						try {							Lock.wait();						} catch (InterruptedException e) {							e.printStackTrace();						}					}				}			}		}, "偶数Thread").start();		new Thread(() -> {			synchronized (Lock) {				while (number <= maxNumber) {					if (number % 2 == 1) {						System.out.println("奇数Thread:" + number++);						Lock.notify();					} else {						try {							Lock.wait();						} catch (InterruptedException e) {							e.printStackTrace();						}					}				}			}		}, "奇数Thread").start();	}}