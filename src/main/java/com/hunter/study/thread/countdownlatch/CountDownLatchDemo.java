package com.hunter.study.thread.countdownlatch;import lombok.extern.slf4j.Slf4j;import java.util.concurrent.CountDownLatch;import java.util.concurrent.TimeUnit;/** * @Author zhangcl * @Date 18/7/9  上午8:36 */@Slf4jpublic class CountDownLatchDemo {    public static void main(String[] args) {        CountDownLatch countDownLatch = new CountDownLatch(4);        new Thread() {            @Override            public void run() {                try{                    Thread.sleep(2000);                    System.out.println("current thread Name is :" + Thread.currentThread().getName());                }catch (Exception e){                    log.error("",e);                }finally {                    countDownLatch.countDown();                }            }        }.start();        new Thread() {            @Override            public void run() {                try{                    Thread.sleep(1000);                    System.out.println("current thread Name is :" + Thread.currentThread().getName());                }catch (Exception e){                    log.error("",e);                }finally {                    countDownLatch.countDown();                }            }        }.start();        new Thread() {            @Override            public void run() {                try{                    Thread.sleep(3000);                    System.out.println("current thread Name is :" + Thread.currentThread().getName());                }catch (Exception e){                    log.error("",e);                }finally {                    countDownLatch.countDown();                }            }        }.start();        try{            System.out.println("main thread is waiting");            countDownLatch.await(1,TimeUnit.SECONDS);            System.out.println("main thread executes end");        }catch (Exception e){            log.error("",e);        }    }}