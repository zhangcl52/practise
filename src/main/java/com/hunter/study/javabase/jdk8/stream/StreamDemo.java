package com.hunter.study.javabase.jdk8.stream;import com.google.common.collect.Lists;import lombok.AllArgsConstructor;import lombok.Data;import org.junit.Test;import java.util.List;import java.util.Map;import java.util.stream.Collectors;/** * @Author 水木 * @Date 2019-07-22  15:29 */public class StreamDemo {    @Test    public void testListToMap() {        //将List<Object>改为Map<String,Object>类型        @Data        @AllArgsConstructor        class Person {            private String name;            private int age;        }        Person p1 = new Person("zs", 1);        Person p2 = new Person("lisi", 2);        Person p3 = new Person("wangwu", 3);        List<Person> personList = Lists.newArrayList();        personList.add(p1);        personList.add(p2);        personList.add(p3);        //将List<Object>改为Map<String,Object>类型        Map<String, Person> personMap = personList.stream().collect(Collectors.toMap(Person::getName, v -> v));        System.out.println(personMap.toString());        //将List<Object>中按某个属性进行拼接        String join = personList.stream().map(Person::getName).collect(Collectors.joining(","));        System.out.println(join);        int sumAge = personList.stream().collect(Collectors.summingInt(Person::getAge));        System.out.println("sumAge=" + sumAge);    }}