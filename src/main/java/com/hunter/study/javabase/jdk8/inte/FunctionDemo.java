package com.hunter.study.javabase.jdk8.inte;import java.util.function.Function;/** * @Author 水木 * @Date 2019-07-09  09:45 * 输入一个值 ，返回另一个。可以是不是同类型 */public class FunctionDemo {    public static void main(String[] args) {        Function<String, String> function = s -> s + " 你好";//        System.out.println(function.apply("水木"));////        System.out.println(applyName("水木1", s -> s + " you should not give up"));        System.out.println(applyName1("水木2", s -> s + " 你不好", s -> s + " 你好"));        System.out.println(applyName2("水木2", s -> s + " 你不好", s -> s + " 你好"));    }    /**     * 将name参数用于function函数中     *     * @param name     * @param function     * @return     */    public static String applyName(String name, Function<String, String> function) {        return function.apply(name);    }    /**     * 可以从左到右顺序执行     *     * @param name     * @param function1     * @param function2     * @return     */    public static String applyName1(String name, Function<String, String> function1, Function<String, String> function2) {        return function1.andThen(function2).andThen(function2).apply(name);    }    /**     * 按从右到左顺序执行     *     * @param name     * @param function1     * @param function2     * @return     */    public static String applyName2(String name, Function<String, String> function1, Function<String, String> function2) {        return function2.compose(function1).apply(name);    }}