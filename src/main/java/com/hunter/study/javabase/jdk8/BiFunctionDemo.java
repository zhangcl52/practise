package com.hunter.study.javabase.jdk8;import java.util.function.BiFunction;import java.util.function.Function;/** * @Author 水木 * @Date 2019-07-08  23:18 */public class BiFunctionDemo {    public static void main(String[] args) {        //BiFunction是两个入参，经过处理后得到一个返回时        //Function是一个入参经过计算得到一个结果。        //BiFunction的andThen是先经过BiFunction的计算，再经过Function的计算，最终得到一个结果//        String r = getBIFunction().andThen(getFunction()).apply(1, 3);//        System.out.println(r.toString());        //还可以这样使用        BiFunction<Integer, Integer, String> biFunction = (x, y) -> {            Integer z = x * y;            return String.valueOf(z);        };        System.out.println(biFunction.andThen(n -> "经过Function处理后的结果：" + n).apply(20, 2));    }    private static Function<Integer, String> getFunction() {        return t -> String.valueOf(t);    }    private static BiFunction<Integer, Integer, Integer> getBIFunction() {        return (x, y) -> x + y;    }}