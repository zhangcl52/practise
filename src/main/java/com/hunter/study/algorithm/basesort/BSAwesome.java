package com.hunter.study.algorithm.basesort;import com.hunter.study.algorithm.SortUtil;import org.junit.Test;import java.util.Arrays;/** * @Author 水木 * @Date 2021/2/22  11:38 上午 */public class BSAwesome {	/**	 * 局部最小问题	 *	 * @param sortedArr	 * @return	 */	public static int bsAwesome(int[] sortedArr) {		if (sortedArr == null || sortedArr.length == 0 || sortedArr.length == 1) {			return -1;		}		if (sortedArr.length == 1 || sortedArr[0] < sortedArr[1]) {			return 0;		}		if (sortedArr[sortedArr.length - 2] > sortedArr[sortedArr.length - 1]) {			return sortedArr.length - 1;		}		int l = 1;		int r = sortedArr.length - 2;		while (l < r) {			int m = l + (r - l) / 2;			if (sortedArr[m] > sortedArr[m + 1]) {				l = m + 1;			} else if (sortedArr[m] > sortedArr[m - 1]) {				r = m - 1;			} else {				return m;			}		}		return l;	}	@Test	public void bsAwesomeTest() {		int maxValue = 10;		int forEachTime = 100;		for (int i = 0; i < forEachTime; i++) {			System.out.println("==========第" + i + "组=========");			final int[] array = SortUtil.generateFixSizeRandomArray(8, 0, maxValue);			System.out.println("数组为：" + Arrays.toString(array));			System.out.println("要查找的位置为：" + bsAwesome(array));		}	}}