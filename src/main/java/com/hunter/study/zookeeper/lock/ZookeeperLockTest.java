package com.hunter.study.zookeeper.lock;import com.google.common.collect.Lists;import org.junit.Test;import java.util.List;/** * @Author zhangcl * @Date 18/7/27  下午8:04 */public class ZookeeperLockTest {    @Test    public void lockTest() {        int count = 1;        for (int i = 0; i < 100; i++) {            Thread thread = new Thread() {                @Override                public void run() {                    System.out.println(Thread.currentThread().getName());                }            };        }    }    @Test    public void createThreadTest1() {        List<String> list = Lists.newArrayList();        list.add("1");        Thread t = new Thread() {            @Override            public void run() {                System.out.println(Thread.currentThread().toString() + "," + list.size());            }        };        t.start();    }    @Test    public void createThreadTest2() {        List<String> list = Lists.newArrayList();        list.add("1");        new Thread(new Runnable() {            @Override            public void run() {                System.out.println(Thread.currentThread().toString() + "," + list.size());            }        }).start();    }    @Test    public void createThreadWithLambda1() {        List<String> list = Lists.newArrayList();        list.add("1");        new Thread(() ->                System.out.println(Thread.currentThread().toString() + "," + list.size()))                .start();    }}